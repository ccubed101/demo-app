version: '3.5'

services:

  sql:
    image: microsoft/mssql-server-windows-express
    container_name: sql-express
    environment: 
      - sa_password=!Giddyup1!
      - accept_eula=y
      - attach_dbs=[{'dbname':'AccountsService','dbfiles':['c:\\Database1\\AccountsService.mdf','c:\\Database1\\AccountsService_log.ldf']}, {'dbname':'BreezeTestDb','dbfiles':['C:\\Database2\\BreezeTestDb.mdf','C:\\Database2\\BreezeTestDb_log.ldf']}, {'dbname':'TrpData','dbfiles':['C:\\Database3\\TrpData.mdf','C:\\Database3\\TrpData_log.ldf']}]
    ports: 
      - "1433:1433"
    volumes:
      - type: bind
        source: "D:/Code Projects/AccountsService/AccountsService/Data/Databases"
        target: c:/Database1
      - type: bind
        source: "D:/Code Projects/BreezeDemoDataService/BreezeDemoDataService/Data/Databases"
        target: c:/Database2
      - type: bind
        source: "D:/Code Projects/TrpDataService/TrpDataService/Data/Databases"
        target: c:/Database3
    # The following sort of works.  But "attach_dbs" (see above) is the better option.
    #command: sqlcmd -q "USE MASTER; CREATE DATABASE DataDb ON (FILENAME=N'c:\DataDb\DataDb.mdf') LOG ON (FILENAME=N'c:\DataDb\DataDb_log.ldf') FOR ATTACH;"
    networks:
      - net

  accounts-service:
    image: accounts-service:latest
    container_name: accounts-service
    build:
      context: D:/Code Projects/AccountsService
      dockerfile: D:/Code Projects/AccountsService/AccountsService/Dockerfile
    ports:
     - "9005:443"
    depends_on:
       - sql
    networks:
      - net
      
  shell-rest-api-service:
    image: shell-rest-api-service:latest
    container_name: shell-rest-api-service
    build:
      context: "D:/Code Projects/ShellRestApiService"
      dockerfile: "D:/Code Projects/ShellRestApiService/ShellRestApiService/dockerfile"
    ports:
      - "9006:443"
    networks:
      - net
      
  breeze-demo-data-service:
    image: breeze-demo-data-service:latest
    container_name: breeze-demo-data-service
    build:
      context: "D:/Code Projects/BreezeDemoDataService"
      dockerfile: "D:/Code Projects/BreezeDemoDataService/Docker/dockerfile"
    ports:
      - "9008:443"
    depends_on:
       - sql
    networks:
      - net
      
  trp-data-service:
    image: trp-data-service:latest
    container_name: trp-data-service
    build:
      context: "D:/Code Projects/TrpDataService"
      dockerfile: "D:/Code Projects/TrpDataService/Docker/dockerfile"
    ports:
      - "9009:443"
    depends_on:
       - sql
    networks:
      - net

  signalr-chat-service:
    image: signalr-chat-service:latest
    container_name: signalr-chat-service
    build:
      context: "D:/Code Projects/SignalRChatService"
      dockerfile: "D:/Code Projects/SignalRChatService/Docker/dockerfile"
    ports:
      - "9010:80"
    networks:
      - net  
      
networks:
  net:
    name: net